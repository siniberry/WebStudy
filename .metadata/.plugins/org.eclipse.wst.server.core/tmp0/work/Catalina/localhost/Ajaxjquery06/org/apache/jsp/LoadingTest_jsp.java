/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.54
 * Generated at: 2022-05-16 03:26:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class LoadingTest_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1652314012442L));
    _jspx_dependants.put("jar:file:/C:/WebStudy/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Ajaxjquery06/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("UTF-8");
	String cp = request.getContextPath();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>LoadingTest.jsp</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/main.css\">\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\t$(function()\r\n");
      out.write("\t{\r\n");
      out.write("\t\t$(\"#sendBtn\").click(function()\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\t// 테스트\r\n");
      out.write("\t\t\t//alert(\"확인\");\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar params = \"name=\" + $.trim($(\"#name\").val())\r\n");
      out.write("\t\t\t\t+ \"&content=\" + $.trim($(\"#content\").val());\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$.ajax(\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\ttype:\"POST\"\r\n");
      out.write("\t\t\t\t, url:\"LoadingTest_ok.jsp\"\r\n");
      out.write("\t\t\t\t,data:params\r\n");
      out.write("\t\t\t\t, success:function(args)\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t$(\"#result\").html(args);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t$(\"#name\").val(\"\");\r\n");
      out.write("\t\t\t\t\t$(\"#content\").val(\"\");\r\n");
      out.write("\t\t\t\t\t$(\"#name\").focus();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t, beforeSend:showRequest\r\n");
      out.write("\t\t\t\t, error:function(e)\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\talert(e.responseText);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// check~!!!\r\n");
      out.write("\t\t//$(document).ajaxStart(기능,동작,행위).ajaxComplete(기능,동작,행위);\r\n");
      out.write("\t\t$(document).ajaxStart(function()\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\t// AJAX 요청 시작 시 ...\r\n");
      out.write("\t\t\t$(\"#loading\").show();\r\n");
      out.write("\t\t\t$(\"#result\").hide();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t//↓가 .가 아닌 거 주의\r\n");
      out.write("\t\t}).ajaxComplete(function()\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\t// AJAX 요청 종료(완료) 시...\r\n");
      out.write("\t\t\t$(\"#loading\").hide();\r\n");
      out.write("\t\t\t$(\"#result\").show();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\tfunction showRequest()\r\n");
      out.write("\t{\r\n");
      out.write("\t\tif (!$.trim($(\"#name\").val()))\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\talert(\"이름을 입력해야 합니다.\");\r\n");
      out.write("\t\t\t$(\"#name\").focus();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif (!$.trim($(\"#content\").val()))\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\talert(\"내용을 입력해야 합니다.\");\r\n");
      out.write("\t\t\t$(\"#content\").focus();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div>\r\n");
      out.write("\t<h1>jQuery의 ajax() 활용 실습</h1>\r\n");
      out.write("\t<p>로딩 이미지 적용</p>\r\n");
      out.write("\t<hr>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div>\r\n");
      out.write("\t이름 <input type=\"text\" id=\"name\" class=\"txt\"><br><br>\r\n");
      out.write("\t내용 <input type=\"text\" id=\"content\" class=\"txt\"><br><br>\r\n");
      out.write("\t\r\n");
      out.write("\t<input type=\"button\" value=\"등록하기\" id=\"sendBtn\" class=\"btn\">\r\n");
      out.write("</div>\r\n");
      out.write("<br><br>\r\n");
      out.write("\r\n");
      out.write("<div id=\"loading\" style=\"text-align: center; display: none;\">\r\n");
      out.write("\t<img alt=\"loading\" src=\"images/loading_01.gif\" style=\"align-items: center;\">\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div id=\"result\">\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
